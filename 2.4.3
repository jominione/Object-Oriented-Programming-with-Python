# Create a mix-in for the Car and Truck classes from the previous exercise
# that lets you operate the turn signals: signal left, signal right, and signal
# off. Use the following code to test your code.

# Solution:

# Note in these examples you can omit the subclass's __init__ method because
# all it needs is call super().__init__ with the same arguments that were 
# provided to the subclass's __init__ method which can be provided by 
# inheritance.

class SignalMixin:

    def signal_left(self):
        print('Signalling left')

    def signal_right(self):
        print('Signalling right')

    def signal_off(self):
        print('Signal is now off')

class Vehicle:
    number_of_vehicles = 0

    def __init__(self):
        Vehicle.number_of_vehicles += 1

    @classmethod
    def vehicles(cls):
        return Vehicle.number_of_vehicles

class Car(Vehicle, SignalMixin):

#    def __init__(self):
#        super().__init__()
    pass
    
class Truck(Vehicle, SignalMixin):

    def __init__(self):
        super().__init__()

class Boat(Vehicle):

    def __init__(self):
        super().__init__()

# Examples:

car1 = Car()

car2 = Car()
car3 = Car()
car4 = Car()

truck1 = Truck()
truck2 = Truck()

boat1 = Boat()
boat2 = Boat()

car1.signal_left()       # Signalling left
truck1.signal_right()    # Signalling right
car1.signal_off()        # Signal is now off
truck1.signal_off()      # Signal is now off
boat1.signal_left()
# AttributeError: 'Boat' object has no attribute
# 'signal_left'