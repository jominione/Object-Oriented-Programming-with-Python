# Write the code needed to make the following code work as shown.

# Solution:

# Note in these examples you can omit the subclass's __init__ method because
# all it needs is call super().__init__ with the same arguments that were 
# provided to the subclass's __init__ method which can be provided by 
# inheritance.

# Note number_of_vehicles is a class variable and all instances of Vehicle
# has access to it. 

class Vehicle:
    number_of_vehicles = 0

    def __init__(self):
        Vehicle.number_of_vehicles += 1

    @classmethod
    def vehicles(cls):
        return Vehicle.number_of_vehicles

class Car(Vehicle):

#    def __init__(self):
#        super().__init__()

    pass

class Truck(Vehicle):

    def __init__(self):
        super().__init__()

class Boat(Vehicle):

    def __init__(self):
        super().__init__()

# Example:

print(Car.vehicles())     # 0
car1 = Car()
print(Car.vehicles())     # 1
car2 = Car()
car3 = Car()
car4 = Car()
print(Car.vehicles())     # 4
truck1 = Truck()
truck2 = Truck()
print(Truck.vehicles())   # 6
boat1 = Boat()
boat2 = Boat()
print(Boat.vehicles())    # 8